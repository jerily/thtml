#set dir [file dirname [info script]]
#set auto_path [linsert $auto_path 0 [file join $dir ..]]

package require tcltest
package require thtml

namespace import -force ::tcltest::test

::tcltest::configure {*}$argv

proc escape {str} {
    return [string map {\r {\r} \n {\n}} $str]
}

# integer comparison

test expr-lt-true {} -body {
    ::thtml::renderfile expr_lt_true.thtml {}
} -result {<div>1</div>}

test expr-lt-false {} -body {
    ::thtml::renderfile expr_lt_false.thtml {}
} -result {<div>0</div>}

test expr-gt-true {} -body {
    ::thtml::renderfile expr_gt_true.thtml {}
} -result {<div>1</div>}

test expr-gt-false {} -body {
    ::thtml::renderfile expr_gt_false.thtml {}
} -result {<div>0</div>}

test expr-lte-true-lt {} -body {
    ::thtml::renderfile expr_lte_true_lt.thtml {}
} -result {<div>1</div>}

test expr-lte-true-eq {} -body {
    ::thtml::renderfile expr_lte_true_eq.thtml {}
} -result {<div>1</div>}

test expr-lte-false {} -body {
    ::thtml::renderfile expr_lte_false.thtml {}
} -result {<div>0</div>}

test expr-gte-true-gt {} -body {
    ::thtml::renderfile expr_gte_true_gt.thtml {}
} -result {<div>1</div>}

test expr-gte-true-eq {} -body {
    ::thtml::renderfile expr_gte_true_eq.thtml {}
} -result {<div>1</div>}

test expr-gte-false {} -body {
    ::thtml::renderfile expr_gte_false.thtml {}
} -result {<div>0</div>}

test expr-eq-true {} -body {
    ::thtml::renderfile expr_eq_true.thtml {}
} -result {<div>1</div>}

test expr-eq-false {} -body {
    ::thtml::renderfile expr_eq_false.thtml {}
} -result {<div>0</div>}

test expr-ne-true {} -body {
    ::thtml::renderfile expr_ne_true.thtml {}
} -result {<div>1</div>}

test expr-ne-false {} -body {
    ::thtml::renderfile expr_ne_false.thtml {}
} -result {<div>0</div>}

# string comparison

test expr-streq-true {} -body {
    ::thtml::renderfile expr_streq_true.thtml {}
} -result {<div>1</div>}

test expr-streq-false {} -body {
    ::thtml::renderfile expr_streq_false.thtml {}
} -result {<div>0</div>}

test expr-strneq-true {} -body {
    ::thtml::renderfile expr_strneq_true.thtml {}
} -result {<div>1</div>}

test expr-strneq-false {} -body {
    ::thtml::renderfile expr_strneq_false.thtml {}
} -result {<div>0</div>}

# logical operators

test expr-and-true {} -body {
    ::thtml::renderfile expr_and_true.thtml {}
} -result {<div>1</div>}

test expr-and-false {} -body {
    ::thtml::renderfile expr_and_false.thtml {}
} -result {<div>0</div>}

test expr-or-true {} -body {
    ::thtml::renderfile expr_or_true.thtml {}
} -result {<div>1</div>}

test expr-or-false {} -body {
    ::thtml::renderfile expr_or_false.thtml {}
} -result {<div>0</div>}

test expr-not-true {} -body {
    ::thtml::renderfile expr_not_true.thtml {}
} -result {<div>1</div>}

test expr-not-false {} -body {
    ::thtml::renderfile expr_not_false.thtml {}
} -result {<div>0</div>}

# ternary operator

test expr-ternary-true {} -body {
    ::thtml::renderfile expr_ternary_true.thtml {}
} -result {<div>1</div>}

test expr-ternary-false {} -body {
    ::thtml::renderfile expr_ternary_false.thtml {}
} -result {<div>0</div>}

# math operators

test expr-add {} -body {
    ::thtml::renderfile expr_add.thtml {}
} -result {<div>3</div>}

test expr-sub {} -body {
    ::thtml::renderfile expr_sub.thtml {}
} -result {<div>-1</div>}

test expr-mult {} -body {
    ::thtml::renderfile expr_mult.thtml {}
} -result {<div>6</div>}

test expr-div {} -body {
    ::thtml::renderfile expr_div.thtml {}
} -result {<div>3</div>}

test expr-expon {} -body {
    ::thtml::renderfile expr_expon.thtml {}
} -result {<div>8</div>}

# more complex expressions

test expr-complex-1 {} -body {
    ::thtml::renderfile expr_complex_1.thtml {a 1 b 2 c 3}
} -result {<div>1</div>}